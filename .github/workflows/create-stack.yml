# Create your OrgFlow stack based on configured secrets in your repository

name: Create the stack

on:
  # This workflow is always manually executed.
  workflow_dispatch:

# This action uses GitHub's built in token authentication for Git repositories.  
# Read more at https://docs.github.com/en/actions/security-guides/automatic-token-authentication.
permissions:
  # Ensure that OrgFlow can push changes back to the remote repository:
  contents: write

jobs:
  stack-create:
    name: Create stack
    runs-on: ubuntu-latest
    # Run in OrgFlow container to avoid having to download and install:
    # NOTE: Normally we'd use the 'orgflow-actions/setup' action, but that action depends on the stack having already been created.
    container: 
      image: orgflow/cli:1.x
      env:
        ORGFLOW_ACCEPTEULA: true # If someone has a license key then they've already accepted the EULA.    
        ORGFLOW_LICENSEKEY: ${{ secrets.ORGFLOW_LICENSEKEY }}
        ORGFLOW_OUTPUTTEMPLATE_WARNING: "::warning title=OrgFlow Warning::$$msg$$"
        ORGFLOW_OUTPUTTEMPLATE_ERROR: "::error title=OrgFlow Error::$$msg$$"

    steps:
      # Verify secrets:
      - name: Verify secrets
        run: |
          # echo "::notice title=ORGFLOW_STACKNAME::${{ secrets.ORGFLOW_STACKNAME }}"
          if ["${{ secrets.ORGFLOW_STACKNAME }}" == ""]; then echo "::error title=Missing input value::Repository secret ORGFLOW_STACKNAME has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.ORGFLOW_LICENSEKEY }}" == ""]; then echo "::error title=Missing input value::Repository secret ORGFLOW_LICENSEKEY has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.SALESFORCE_USERNAME }}" == ""]; then echo "::error title=Missing input value::Repository secret SALESFORCE_USERNAME has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.SALESFORCE_PASSWORD }}" == ""]; then echo "::error title=Missing input value::Repository secret SALESFORCE_PASSWORD has not been set. See the Readme for more details." && exit 1; fi;

      # Configure Git:
      # NOTE: Normally the 'orgflow-actions/setup' action would do this, but that action depends on the stack having already been created.
      - name: Configure Git
        run: |
          # Set the username for the repo:
          git config --global credential.$GITHUB_SERVER_URL.username ${{ github.actor }}         
          # Create a script for ASKPASS to run to get the access token:
          echo 'echo ${{ secrets.GITHUB_TOKEN }}' > $HOME/.git-askpass
          chmod +x $HOME/.git-askpass
          # Register the script with ASKPASS:
          echo "GIT_ASKPASS=$HOME/.git-askpass" >> $GITHUB_ENV
          # Set default values for commit signatures:
          git config --global user.email "defaultcommitter@orgflow.io"
          git config --global user.name "OrgFlow Default Committer"

      # Run OrgFlow command to create stack:
      - name: Run stack:create
        run: |
          orgflow stack:create --name="${{ secrets.ORGFLOW_STACKNAME }}" --gitRepoUrl="$GITHUB_SERVER_URL/${{ github.repository }}.git" --gitBranch=main --username="${{ secrets.SALESFORCE_USERNAME }}" --password="${{ secrets.SALESFORCE_PASSWORD }}" --productionEnvironmentName=Production

      # Publish any diagnostic bundles as an artifact:
      # NOTE: Normally the 'orgflow-actions/setup' action would do this, but that action depends on the stack having already been created.
      - name: Publish diagnostic bundle
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: orgflow_diag_${{ github.job }}_${{ github.run_attempt }}
          path: /tmp/OrgFlow_Diagnostics_*.zip
          retention-days: 3
          if-no-files-found: ignore
