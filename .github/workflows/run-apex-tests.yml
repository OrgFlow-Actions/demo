# Run tests in an environment and publish the results

name: Run Apex tests

on:
  # This workflow is always manually executed.
  workflow_dispatch:
    inputs:
      environmentName:
        description: "Name of the environment to run tests in:"
        required: true

jobs:
  env-test:
    name: Run tests in environment
    runs-on: ubuntu-latest    

    steps:
      # Verify secrets:
      - name: Verify secrets
        run: |
          if ["${{ secrets.ORGFLOW_STACKNAME }}" == ""]; then echo "::error title=Missing input value::Repository secret ORGFLOW_STACKNAME has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.ORGFLOW_LICENSEKEY }}" == ""]; then echo "::error title=Missing input value::Repository secret ORGFLOW_LICENSEKEY has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.SALESFORCE_USERNAME }}" == ""]; then echo "::error title=Missing input value::Repository secret SALESFORCE_USERNAME has not been set. See the Readme for more details." && exit 1; fi;
          if ["${{ secrets.SALESFORCE_PASSWORD }}" == ""]; then echo "::error title=Missing input value::Repository secret SALESFORCE_PASSWORD has not been set. See the Readme for more details." && exit 1; fi;

      # Install and configure OrgFlow:
      - name: Install OrgFlow
        uses: orgflow-actions/setup@v1
        with:
          license-key: ${{ secrets.ORGFLOW_LICENSEKEY }}
          salesforce-username: ${{ secrets.SALESFORCE_USERNAME }}
          salesforce-password: ${{ secrets.SALESFORCE_PASSWORD }}
          stack-name: ${{ secrets.ORGFLOW_STACKNAME }}
        env:
          ORGFLOW_ACCEPTEULA: "true"
      
      # Run OrgFlow command to execute tests in Salesforce:
      - name: Run env:test
        run: orgflow env:test --environment="${{ github.event.inputs.environmentName }}" --jUnitTo="junit.xml"

      # Publish the test results using an action from the marketplace:
      - name: Publish test results
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: junit.xml
          detailed_summary: true
          include_passed: true
